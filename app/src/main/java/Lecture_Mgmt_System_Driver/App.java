/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package Lecture_Mgmt_System_Driver;

import Lecture_Mgmt_System.*;
import Lecture_Mgmt_System.Module;
import java.util.ArrayList;
import org.joda.time.DateTime;

public class App {
    
    public static void main(String[] args) {
        // Set up students
        Student s1 = new Student("David McIntyre", "20-02-1998");
        Student s2 = new Student("Ritchard Houston", "15-06-1998");
        Student s3 = new Student("Cathal McSweeney", "20-09-1998");
        Student s4 = new Student("Joshua Whelan", "10-11-1998");
        
        // Create 1st list of students
        ArrayList<Student> students1 = new ArrayList<>();
        students1.add(s1);
        students1.add(s2);
        students1.add(s3);
        students1.add(s4);
        
        // Create 2nd list of students
        ArrayList<Student> students2 = new ArrayList<>();
        students2.add(s1);
        students2.add(s2);
        
        // Set up lecturers
        Lecturer l1 = new Lecturer("Michael Shukat", "25-07-1974");
        Lecturer l2 = new Lecturer("Enda Barrett", "03-08-1980");
        Lecturer l3 = new Lecturer("Des Chambers", "23-03-1970");
        Lecturer l4 = new Lecturer("Colm O' Riordan", "15-10-1971");
        
        // Create list of lecturers
        ArrayList<Lecturer> lecturers = new ArrayList<>();
        lecturers.add(l1);
        lecturers.add(l2);
        lecturers.add(l3);
        lecturers.add(l4);
        
        // Set up modules
        Module m1 = new Module("Software Engineering", "CT417");
        Module m2 = new Module("Cryptography", "CT480");
        Module m3 = new Module("Cybersecurity", "CT465");
        Module m4 = new Module("Information Retrieval", "CT440");
        
        // Create 1st list of modules
        ArrayList<Module> modules1 = new ArrayList<>();
        modules1.add(m1);
        modules1.add(m2);
        modules1.add(m3);
        modules1.add(m4);
        
        // Create 2nd list of modules
        ArrayList<Module> modules2 = new ArrayList<>();
        modules2.add(m1);
        modules2.add(m2);
        
        // Set up courses
        Course c1 = new Course("4BCT");
        Course c2 = new Course("3BCT");
        Course c3 = new Course("2BCT");
        Course c4 = new Course("1BCT");
        
        // Create start and end dates for courses
        DateTime start = new DateTime(2022, 9, 5, 0, 0, 0);
        DateTime end = new DateTime(2023, 5, 20, 0, 0, 0);
        
        // Set up 1st list of courses
        ArrayList<Course> courses1 = new ArrayList<>();
        courses1.add(c1);
        courses1.add(c2);
        courses1.add(c3);
        courses1.add(c4);
        
        for (Course c : courses1) {
            c.setStartDate(start);
            c.setEndDate(end);
        }
        
        // Set up 2nd list of courses
        ArrayList<Course> courses2 = new ArrayList<>();
        courses2.add(c1);
        courses2.add(c2);
        
        for (Course c : courses2) {
            c.setStartDate(start);
            c.setEndDate(end);
        }
        
        // Assign modules to students
        s1.addModules(modules1);
        s2.addModules(modules2);
        s3.addModules(modules1);
        s4.addModules(modules2);
        
        // Assign courses to students
        s1.addCourses(courses1);
        s2.addCourses(courses2);
        s3.addCourses(courses1);
        s4.addCourses(courses2);
        
        // Assign lecturers to modules
        m1.setLecturer(l1);
        m2.setLecturer(l2);
        m3.setLecturer(l3);
        m4.setLecturer(l4);
        
        // Assign students to modules
        m1.addStudents(students1);
        m2.addStudents(students2);
        m3.addStudents(students1);
        m4.addStudents(students2);
        
        // Assign courses to modules
        m1.addCourses(courses1);
        m2.addCourses(courses2);
        m3.addCourses(courses1);
        m4.addCourses(courses2);
        
        // Assign modules to courses
        c1.addModules(modules1);
        c2.addModules(modules2);
        c3.addModules(modules1);
        c4.addModules(modules2);
        
        // Assign students to courses
        c1.addStudents(students1);
        c2.addStudents(students2);
        c3.addStudents(students1);
        c4.addStudents(students2);
        
        System.out.println("======== Students =======");
        
        // Print students to console
        for (Student s : students1) {
            System.out.println(s+"\nCourses:\n");
            for (Course c : s.getCourses()) {
                System.out.println(c);
            }
            System.out.println("\nModules:\n");
            for (Module m : s.getModules()) {
                System.out.println(m);
            }
            System.out.println("----------------------------");
        }
        
        // Print Modules to console
        System.out.println("======== Modules =======");
        for (Module m : modules1) {
            System.out.println(m+"\nCourses\n");
            for (Course c : m.getCourses()) {
                System.out.println(c);
            }
            System.out.println("\nStudents\n");
            for (Student s : m.getStudents()) {
                System.out.println(s);
            }
            System.out.println("----------------------------");
        }
        
        // Print Lecturers to console
        System.out.println("======== Lecturers ========");
        for (Lecturer l : lecturers) {
            System.out.println(l);
        }
        
        // Print Courses to console
        System.out.println("======== Courses =======");
        for (Course c : courses1) {
            System.out.println(c+"\nModules:\n");
            for (Module m : c.getModules()) {
                System.out.println(m);
            }
            System.out.println("\nStudents:\n");
            for (Student s : c.getStudents()) {
                System.out.println(s);
            }
            System.out.println("----------------------------");
        }
    }
}
